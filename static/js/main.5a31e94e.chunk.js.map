{"version":3,"sources":["components/Card.js","components/Message.js","App.js","index.js"],"names":["Card","props","isMounted","React","useRef","useEffect","current","onClick","hasBeenClicked","className","src","image","alt","name","Message","useState","message","setMessage","congratulations","items","console","log","score","Math","floor","random","length","App","clicked","heroes","setHeroes","nextGame","setNextGame","cards","visibility","setVisibility","setScore","bestScore","setBestScore","setCards","shuffleCards","array","a","i","index","temp","push","card","forEach","hero","prevScore","prevState","map","interval","setInterval","oldValue","clearInterval","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a31e94e.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\n\nfunction Card(props) {\n    const isMounted = React.useRef(true)\n\n    useEffect(() => {\n        if (isMounted.current) {\n            isMounted.current = false;\n        }\n    })\n\n    return (\n        <div onClick={() => props.hasBeenClicked()} className=\"card-body\">\n            <div className=\"card-image\">\n                <img src={props.image} alt=\"\" />\n            </div>\n            <div className=\"card-name\">\n                {props.name}\n            </div>\n        </div>\n    )\n}\n\nexport default Card","import React from 'react';\n\nexport default function Message(props) {\n    const [message, setMessage] = React.useState(\"Game Over\")\n    \n    function randomize(items) {\n        return items[Math.floor(Math.random()*items.length)];\n    }\n    const congratulations = [\n        \"Congratulations on your well-deserved success.\",\n        \"Heartfelt congratulations to you.\",\n        \"Warmest congratulations on your achievement.\",\n        \"Congratulations and best wishes for your next adventure!\",\n        \"So pleased to see you accomplishing great things.\"\n    ]\n\n    React.useEffect(() => {\n        console.log(props.score)\n        if (props.score === 12) {\n            setMessage(randomize(congratulations))\n        } else {\n            setMessage(\"Game Over\")\n        }\n    }, [props.score])\n\n\n    return message;\n}","import React, {useState, useEffect} from 'react'\nimport Card from './components/Card'\nimport Message from './components/Message'\n\nfunction App() {\n  const [heroes, setHeroes] = useState([\n    {name: \"Arc Warden\", image: \"https://i.pinimg.com/564x/97/fe/05/97fe05c0e88284f75108287f3734b17c.jpg\", clicked: false},\n    {name: \"Legion Commander\", image: \"https://i.pinimg.com/564x/73/5a/d1/735ad1828f3f06674827d80dd5341137.jpg\", clicked: false},\n    {name: \"Invoker\", image: \"https://i.pinimg.com/564x/03/ab/1e/03ab1e662eb93a6707dc2e269b2bc6db.jpg\", clicked: false},\n    {name: \"Terrorblade\", image: \"https://i.pinimg.com/564x/63/20/6e/63206e7dca28008bccde3f2d2a309348.jpg\", clicked: false},\n    {name: \"Shadow Fiend\", image: \"https://i.pinimg.com/564x/ec/fc/2c/ecfc2c0db86afa7af6fd9f5b85535889.jpg\", clicked: false},\n    {name: \"Queen of Pain\", image: \"https://i.pinimg.com/564x/3f/f7/f9/3ff7f9df8cac8d90edbb7ffa856fb3a9.jpg\", clicked: false},\n    {name: \"Earth Spirit\", image: \"https://i.pinimg.com/564x/e3/5a/2b/e35a2b137a31ebac164675d0385b74a2.jpg\", clicked: false},\n    {name: \"Zeus\", image: \"https://i.pinimg.com/564x/9f/14/53/9f145375e46c2923672672222bc1a74b.jpg\", clicked: false},\n    {name: \"Sven\", image: \"https://i.pinimg.com/564x/6c/d0/ec/6cd0ecfe2c558b3a94f77fc98c35fe12.jpg\", clicked: false},\n    {name: \"Lina\", image: \"https://i.pinimg.com/564x/84/a1/f6/84a1f6e22231dcdb839353295d0a8c1a.jpg\", clicked: false},\n    {name: \"Morphling\", image: \"https://i.pinimg.com/564x/3e/1e/fd/3e1efd73374c54b7e7eb77e91592c8f7.jpg\", clicked: false},\n    {name: \"Phantom Assassin\", image: \"https://i.pinimg.com/564x/38/38/c9/3838c9206c9fae60608636ad610204cc.jpg\", clicked: false},\n  ])\n\n  const [nextGame, setNextGame] = useState(3);\n  const [visibility, setVisibility] = useState({\n    cards: 'show',\n    message: 'hide'\n  });\n\n  const [score, setScore] = useState(0)\n  const [bestScore, setBestScore] = useState(0)\n  \n  const [cards, setCards] = useState(null)\n  \n  const shuffleCards = async (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const index = Math.floor(Math.random() * (i + 1))\n      const temp = array[i];\n      array[i] = array[index];\n      array[index] = temp;\n    }\n  }  \n\n  // Update counter and heroes array\n  const hasBeenClicked = (card) => {\n    heroes.forEach(hero => {\n      if (card === hero.name && hero.clicked !== true) {\n        // Update score \n        setScore(prevScore => prevScore + 1)\n        \n        // Update hero array\n        setHeroes(prevState => {\n          return prevState.map(hero => {\n            if (card === hero.name) {\n              return {\n                ...hero, clicked: true\n              }\n            } else {\n              return hero;\n            }\n          })\n        })\n      } else if (card === hero.name && hero.clicked === true) {\n        // Update score \n        setScore(0)\n\n        setVisibility(() => {\n          return ({\n            cards: \"hide\", \n            message: \"show\"\n          })\n        })\n\n        const interval = setInterval(() => {\n          \n          setNextGame((oldValue) => {\n            if (oldValue === 1) {\n              clearInterval(interval)\n              setVisibility(() => {\n                return ({\n                  cards: \"show\",\n                  message: \"hide\"\n                })\n              })\n              return 3\n            }\n            return oldValue - 1;\n          })\n        }, 1000)\n\n\n        // Update hero array\n        setHeroes(prevState => {\n          return prevState.map(hero => {\n            return {\n              ...hero, clicked: false\n            }\n          })\n        })\n\n      } \n    })\n  }\n\n  useEffect(() => {\n    const cards = []\n    for (let i = 0; i < heroes.length; i++) {\n      cards.push(<Card key={i} name={heroes[i].name} image={heroes[i].image} hasBeenClicked={() => hasBeenClicked(heroes[i].name)} />)\n    }\n    shuffleCards(cards)\n    setCards(cards)\n  }, [heroes])\n\n\n// Update the high score and shuffle cards\n  useEffect(() => {\n    if (score > bestScore) {\n      setBestScore(score)\n    }\n    \n    if (cards) {\n      shuffleCards(cards)\n    }\n  }, [score])\n\n  useEffect(() => {\n    if (score === 12 && visibility.cards !== \"hide\") {\n\n      setVisibility(() => {\n        return ({\n          cards: \"hide\", \n          message: \"show\"\n        })\n      })\n\n      const interval = setInterval(() => {\n          \n        setNextGame((oldValue) => {\n          if (oldValue === 1) {\n            clearInterval(interval)\n            setVisibility(() => {\n              return ({\n                cards: \"show\",\n                message: \"hide\"\n              })\n            })\n            return 3\n          }\n          return oldValue - 1;\n        })\n      }, 1000)\n\n      setTimeout(() => {\n        setScore(0)\n      }, 3000)\n    }\n  }, [score])\n\n  return (\n    <div className=\"App\">\n      <div className=\"top\">\n        <div className=\"title\">\n          <h1>Dota 2 Memory Game</h1>\n          <p>Get points by clicking on a card but don't click on any more than once!</p>\n        </div>\n        <div className=\"score\">\n          <p>Score: {score}</p>\n          <p>Best score: {bestScore}</p>\n        </div>\n      </div>\n      <div className={`card-container ${visibility.cards}`}>\n        {cards}\n      </div>\n      <div className={`message ${visibility.message}`}>\n        <Message score={score} visibility={visibility.cards} />\n        <div>Next game will begin in {nextGame}...</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}